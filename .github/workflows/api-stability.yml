name: API Stability

on:
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
  push:
    branches: [ main ]

jobs:
  api-stability:
    name: API Stability Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm install --prefer-offline

      - name: Build
        run: npm run build

      - name: Check circular dependencies
        run: |
          echo "Checking for circular dependencies..."
          npx madge --circular --extensions ts src/
          if [ $? -ne 0 ]; then
            echo "❌ Circular dependencies detected!"
            exit 1
          fi
          echo "✅ No circular dependencies found"

      - name: Run API stability tests
        run: npm run test:api

      - name: Run MDM validator tests
        run: npm run test:validator

      - name: Check bundle size
        run: npm run check:bundle

      - name: Export API surface
        run: |
          echo "Exporting public API surface..."
          node -e "
            import { readFileSync } from 'fs';
            const content = readFileSync('dist/mds-core.esm.js', 'utf8');
            const exports = content.match(/export\s+{\s*([^}]+)\s*}/g);
            console.log('Exported APIs:', exports ? exports.length : 0);
          "

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const bundleSize = fs.statSync('dist/mds-core.esm.js').size;
            const bundleLite = fs.statSync('dist/mds-core-lite.esm.js').size;
            const bundleKB = Math.round(bundleSize / 1024);
            const bundleLiteKB = Math.round(bundleLite / 1024);
            const maxKB = 360;
            const maxLiteKB = 280;
            const headroom = maxKB - bundleKB;
            const headroomLite = maxLiteKB - bundleLiteKB;
            const statusCore = bundleKB <= maxKB ? '✅' : '❌';
            const statusLite = bundleLiteKB <= maxLiteKB ? '✅' : '❌';

            const comment = `## API Stability Check

            **Core Bundle:** ${statusCore} ${bundleKB} KB / ${maxKB} KB (${headroom} KB headroom)
            **Lite Bundle:** ${statusLite} ${bundleLiteKB} KB / ${maxLiteKB} KB (${headroomLite} KB headroom)

            **Tests:**
            - ✅ Circular dependency check passed
            - ✅ API stability tests passed
            - ✅ MDM validator tests passed
            ${bundleKB <= maxKB && bundleLiteKB <= maxLiteKB ? '- ✅ Bundle size within limits' : '- ❌ Bundle size exceeds limit'}

            <details>
            <summary>API Compatibility Matrix</summary>

            | Version | Compatible With |
            |---------|----------------|
            | v5.0 | v5.0, v5.1, v5.2 |
            | v5.1 | v5.0, v5.1, v5.2 |
            | v5.2 | v5.0, v5.1, v5.2 |

            All v5.0 APIs remain stable in v5.2.
            </details>
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
