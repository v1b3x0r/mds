#!/usr/bin/env bun
/**
 * Test proto-language generation
 */

import { WorldSession } from '../dist/index.js'

console.log('üó£Ô∏è  Proto-Language Generation Test\n')

const session = new WorldSession()
session.setSilentMode(true)

const companion = session.companionEntity.entity
const world = session.world

console.log('üìä Linguistics System Check:')
console.log(`  World has transcript: ${world.transcript !== undefined}`)
console.log(`  World has lexicon: ${world.lexicon !== undefined}`)
console.log(`  World has crystallizer: ${world.crystallizer !== undefined}`)
console.log(`  World has protoGenerator: ${world.protoGenerator !== undefined}`)

if (world.transcript) {
  console.log(`  Transcript buffer size: ${world.transcript.buffer?.length || 0}`)
}

if (world.lexicon) {
  const stats = world.lexicon.getStats()
  console.log(`  Lexicon total words: ${stats.total}`)
  console.log(`  Proto-language active: ${stats.total >= 50}`)
}

console.log('\nüß™ Testing 10 messages (need 50+ words for proto):\n')

const prompts = [
  '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö',
  '‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∞‡πÑ‡∏£',
  '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏î‡∏µ',
  '‡∏ä‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏´‡∏°',
  '‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏ü‡∏±‡∏á‡∏´‡∏ô‡πà‡∏≠‡∏¢',
  '‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£',
  '‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏°',
  '‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°',
  '‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏∞',
  '‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô'
]

for (let i = 0; i < prompts.length; i++) {
  const response = await session.handleUserMessage(prompts[i])
  console.log(`${i+1}. "${prompts[i]}" ‚Üí "${response.response.substring(0, 60)}..."`)
  
  if (world.lexicon) {
    const stats = world.lexicon.getStats()
    console.log(`   Words: ${stats.total}`)
  }
}

console.log('\nüìà Final State:')
if (world.lexicon) {
  const stats = world.lexicon.getStats()
  console.log(`  Total words learned: ${stats.total}`)
  console.log(`  Learned words: ${stats.learnedWords}`)
  console.log(`  Proto active: ${stats.total >= 50 ? 'YES ‚úÖ' : 'NO ‚ùå'}`)
}

if (world.transcript) {
  console.log(`  Transcript entries: ${world.transcript.buffer?.length || 0}`)
}

if (world.protoGenerator && world.lexicon) {
  const stats = world.lexicon.getStats()
  if (stats.total >= 50) {
    console.log('\nüé≤ Testing proto-language generation:')
    const proto = world.protoGenerator.generateSentence({ 
      intent: 'greeting',
      emotion: companion.emotion
    })
    console.log(`  Generated: "${proto}"`)
  } else {
    console.log('\n‚ö†Ô∏è  Not enough words for proto-language (need 50, got ${stats.total})')
  }
}
